{"version":3,"file":"static/js/457.c93be483.chunk.js","mappings":"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","sources":["content/project_tracking/design_system/components/InfoCard.tsx","content/project_tracking/design_system/HighLight.tsx","utils/number.ts","content/project_tracking/design_system/components/DetailCard.tsx","utils/time.ts","content/project_tracking/design_system/components/StatusCardContainer.tsx","content/project_tracking/design_system/Tasks.tsx","content/project_tracking/design_system/index.tsx"],"sourcesContent":["import React from 'react';\nimport { Card, CardContent, CardHeader, Box, useTheme } from '@mui/material';\n\ninterface InfoCardProps {\n  title: string;\n  titleColor?: string;\n  info: React.ReactNode;\n  titleIcon: React.ReactNode;\n}\n\nconst InfoCard: React.FC<InfoCardProps> = ({\n  title,\n  info,\n  titleIcon,\n  titleColor\n}) => {\n  const theme = useTheme();\n  return (\n    <Card>\n      <CardHeader\n        action={titleIcon}\n        title={\n          <Box\n            component={'span'}\n            fontWeight={'bold'}\n            color={titleColor || theme.colors.alpha.black[70]}\n            fontSize={13}\n          >\n            {title}\n          </Box>\n        }\n        sx={{ paddingBottom: 0, paddingTop: 0.75 }}\n      />\n      <CardContent sx={{ paddingTop: 0.5, paddingBottom: '9px !important' }}>\n        {info}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default InfoCard;\n","import React from 'react';\nimport { Box, IconButton, Grid } from '@mui/material';\nimport InfoCard from './components/InfoCard';\nimport WorkOutlineIcon from '@mui/icons-material/WorkOutline';\nimport LocalAtmIcon from '@mui/icons-material/LocalAtm';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport TimelineIcon from '@mui/icons-material/Timeline';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\n\nconst HighLight = () => {\n  return (\n    <Grid my={3} columns={12} container spacing={2}>\n      <Grid item xl={3} lg={3} md={4} sm={6} xs={12}>\n        <InfoCard\n          title=\"Total time on Project\"\n          titleIcon={\n            <IconButton aria-label=\"settings\">\n              <WorkOutlineIcon />\n            </IconButton>\n          }\n          info={\n            <Box component={'span'} fontWeight={'bold'} fontSize={20}>\n              03:39 <sup>h</sup>\n            </Box>\n          }\n        />\n      </Grid>\n      <Grid item xl={3} lg={3} md={4} sm={6} xs={12}>\n        <InfoCard\n          title=\"Earnings\"\n          titleIcon={\n            <IconButton aria-label=\"settings\">\n              <LocalAtmIcon />\n            </IconButton>\n          }\n          info={\n            <Box component={'span'} fontWeight={'bold'} fontSize={20}>\n              <sup>$</sup> 2409.20\n            </Box>\n          }\n        />\n      </Grid>\n      <Grid item xl={3} lg={3} md={4} sm={6} xs={12}>\n        <InfoCard\n          title=\"Costs\"\n          titleIcon={\n            <IconButton aria-label=\"settings\">\n              <AccountBalanceWalletIcon />\n            </IconButton>\n          }\n          info={\n            <Box component={'span'} fontWeight={'bold'} fontSize={20}>\n              <sup>$</sup> 1260.14\n            </Box>\n          }\n        />\n      </Grid>\n      <Grid item xl={3} lg={3} md={4} sm={6} xs={12}>\n        <InfoCard\n          title=\"Productivity\"\n          titleColor={'#5495e4'}\n          titleIcon={\n            <Box color={'#5495e4'}>\n              <IconButton aria-label=\"settings\" color=\"inherit\">\n                <TimelineIcon />\n              </IconButton>\n            </Box>\n          }\n          info={\n            <>\n              <Box component={'span'} fontWeight={'bold'} fontSize={20}>\n                93.57 <sup>%</sup>\n              </Box>\n              {'  '}\n              <Box\n                component={'span'}\n                fontWeight={'bold'}\n                fontSize={10}\n                color={'#3f8f73'}\n              >\n                <ArrowDropUpIcon sx={{ transform: 'translateY(10px)' }} />\n                2.37%\n              </Box>\n            </>\n          }\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default HighLight;\n","export const twoDigitString = (num: number): string => {\n  return (num < 10 ? '0' : '') + num;\n};\n","import React, { useCallback, useContext, useMemo, useRef } from 'react';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  IconButton,\n  useTheme\n} from '@mui/material';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { twoDigitString } from 'src/utils/number';\nimport { numberToTimeObject } from 'src/utils/time';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport KeyboardDoubleArrowUpIcon from '@mui/icons-material/KeyboardDoubleArrowUp';\nimport { Priority, Task } from 'src/models/task';\nimport { PopupContext } from 'src/contexts/PopupContext';\n\nconst colors = ['#6dcfba', '#5895d7', '#f5c344'];\n\ninterface DetailCardProps extends Task {\n  onDragStart?: () => void;\n  onDragEnd?: () => void;\n  onTaskEdit?: (task: Task) => void;\n}\n\nconst DetailCard: React.FC<DetailCardProps> = ({\n  id,\n  name,\n  assignees,\n  timer,\n  priority,\n  status,\n  onDragStart,\n  onDragEnd,\n  onTaskEdit\n}) => {\n  const theme = useTheme();\n  const { openPopup } = useContext(PopupContext);\n\n  const timeObject = useMemo(() => {\n    return numberToTimeObject(timer);\n  }, [timer]);\n  const onStartDrag = useCallback(\n    (e: React.DragEvent<HTMLDivElement>) => {\n      e.dataTransfer.setData('data', id);\n      onDragStart && onDragStart();\n    },\n    [id, onDragStart]\n  );\n  const colorArr = useRef<string[]>([\n    colors[Math.floor(Math.random() * colors.length)],\n    colors[Math.floor(Math.random() * colors.length)],\n    colors[Math.floor(Math.random() * colors.length)]\n  ]);\n\n  const onEndDrag = useCallback(() => {\n    onDragEnd && onDragEnd();\n  }, [onDragEnd]);\n\n  const openEditPopup = useCallback(() => {\n    openPopup(\n      'editTask',\n      {\n        id,\n        name,\n        assignees,\n        priority,\n        status\n      },\n      onTaskEdit\n    );\n  }, [assignees, id, name, onTaskEdit, openPopup, priority, status]);\n\n  return (\n    <Card\n      sx={{\n        cursor: 'pointer',\n        height: 125,\n        '.MuiCardHeader-content': { width: '70%' }\n      }}\n      draggable\n      onDragStart={onStartDrag}\n      onDragEnd={onEndDrag}\n      onDoubleClick={openEditPopup}\n    >\n      <CardHeader\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={\n          <Box\n            sx={{\n              whiteSpace: 'nowrap',\n              textOverflow: 'ellipsis',\n              display: 'inline-block',\n              overflow: 'hidden',\n              width: '100%'\n            }}\n            component={'span'}\n          >\n            {name}\n          </Box>\n        }\n      />\n      <CardContent\n        sx={{ paddingTop: 0.5, paddingBottom: '9px !important' }}\n      ></CardContent>\n      <CardActions>\n        {assignees.slice(0, 3).map((assignee, index) => {\n          return (\n            <Avatar\n              key={assignee}\n              alt={assignee}\n              variant={'circular'}\n              sx={{\n                width: 30,\n                height: 30,\n                backgroundColor: colorArr.current[index]\n              }}\n            >\n              {assignee.charAt(0)}\n            </Avatar>\n          );\n        })}\n        <Box\n          component={'span'}\n          marginLeft=\"auto\"\n          fontWeight={'bold'}\n          color={theme.colors.alpha.black[50]}\n        >\n          {`${twoDigitString(timeObject.h)}:${twoDigitString(\n            timeObject.m\n          )}:${twoDigitString(timeObject.s)}`}{' '}\n          h\n        </Box>\n        <Box component={'span'} marginLeft=\"auto\">\n          <Avatar\n            variant=\"circular\"\n            sx={{\n              width: 25,\n              height: 25,\n              backgroundColor:\n                priority === Priority.LOW\n                  ? theme.colors.success.lighter\n                  : priority === Priority.MEDIUM\n                  ? theme.colors.warning.lighter\n                  : priority === Priority.HIGH\n                  ? theme.colors.error.lighter\n                  : ''\n            }}\n          >\n            {priority === Priority.LOW && (\n              <KeyboardArrowUpIcon color={'success'} fontSize={'small'} />\n            )}\n            {priority === Priority.MEDIUM && (\n              <KeyboardArrowUpIcon color={'warning'} />\n            )}\n            {priority === Priority.HIGH && (\n              <KeyboardDoubleArrowUpIcon color={'error'} fontSize={'small'} />\n            )}\n          </Avatar>\n        </Box>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default DetailCard;\n","export const numberToTimeObject = (num: number) => {\n  return {\n    h: Math.floor((num % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n    m: Math.floor((num % (1000 * 60 * 60)) / (1000 * 60)),\n    s: Math.floor((num % (1000 * 60)) / 1000)\n  };\n};\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef\n} from 'react';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  useTheme\n} from '@mui/material';\nimport { Box } from '@mui/system';\nimport DetailCard from './DetailCard';\nimport { Priority, Task, TaskStatus } from 'src/models/task';\nimport { PopupContext } from 'src/contexts/PopupContext';\n\ninterface StatusCardContainerProps {\n  items: Task[];\n  status: string;\n  onDragStart?: () => void;\n  onDragEnd?: () => void;\n  isDragging?: boolean;\n  addTask?: (data: Task) => void;\n  updateTaskStatus?: (id: string, status: TaskStatus) => void;\n  onTaskEdit?: (data: Task) => void;\n}\n\nconst PriorityOrder = [Priority.HIGH, Priority.MEDIUM, Priority.LOW];\n\nconst StatusCardContainer: React.FC<StatusCardContainerProps> = ({\n  items,\n  status,\n  isDragging,\n  onDragStart,\n  onDragEnd,\n  addTask,\n  updateTaskStatus,\n  onTaskEdit\n}) => {\n  const theme = useTheme();\n  const cardRef = useRef<HTMLDivElement>(null);\n  const { openPopup } = useContext(PopupContext);\n  const statusMap = useMemo(() => {\n    switch (status) {\n      case TaskStatus.TODO:\n        return 'To Do';\n      case TaskStatus.ON_HOLD:\n        return 'On Hold';\n      case TaskStatus.IN_PROGRESS:\n        return 'In Progress';\n      case TaskStatus.DONE:\n        return 'Done';\n    }\n  }, [status]);\n\n  const itemsByPriority = useMemo(() => {\n    return items.sort((a, b) => {\n      if (PriorityOrder.indexOf(a.priority) > PriorityOrder.indexOf(b.priority))\n        return 1;\n      else return -1;\n    });\n  }, [items]);\n\n  const onStartDrag = useCallback(() => {\n    onDragStart && onDragStart();\n  }, [onDragStart]);\n\n  const onEndDrag = useCallback(() => {\n    onDragEnd && onDragEnd();\n  }, [onDragEnd]);\n\n  const onDragOver = useCallback(\n    (e: React.DragEvent<HTMLDivElement>) => {\n      e.preventDefault();\n      const elms = Array.from(\n        cardRef.current.children as HTMLCollectionOf<HTMLElement>\n      );\n      elms.forEach((elm) => (elm.style.pointerEvents = 'none'));\n      if (e.currentTarget === cardRef.current)\n        cardRef.current.style.backgroundColor = theme.colors.alpha.black[30];\n    },\n    [theme.colors.alpha.black]\n  );\n\n  const onDragLeave = useCallback(() => {\n    cardRef.current.style.backgroundColor = theme.colors.alpha.black[10];\n  }, [theme.colors.alpha.black]);\n\n  const unblockElm = () => {\n    const elms = Array.from(\n      cardRef.current.children as HTMLCollectionOf<HTMLElement>\n    );\n    elms.forEach((elm) => (elm.style.pointerEvents = 'auto'));\n  };\n\n  const onDrop = useCallback(\n    (e: React.DragEvent<HTMLDivElement>) => {\n      const data = e.dataTransfer.getData('data');\n      cardRef.current.style.backgroundColor = theme.colors.alpha.black[10];\n      updateTaskStatus(data, status as TaskStatus);\n      onEndDrag && onEndDrag();\n    },\n    [onEndDrag, status, theme.colors.alpha.black, updateTaskStatus]\n  );\n\n  useEffect(() => {\n    if (!isDragging) {\n      unblockElm();\n    }\n  }, [isDragging]);\n\n  return (\n    <Card\n      ref={cardRef}\n      sx={{\n        backgroundColor: theme.colors.alpha.black[10],\n        ...(isDragging && {\n          border: `1px dashed ${theme.colors.alpha.black[70]}`\n        }),\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n      }}\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n      onDrop={onDrop}\n      onDragEnd={() => unblockElm()}\n    >\n      <CardHeader\n        title={\n          <Box\n            component={'span'}\n            sx={{ fontWeight: '700', color: theme.colors.alpha.black[50] }}\n            fontSize={12}\n          >\n            {statusMap}\n          </Box>\n        }\n        sx={{ paddingTop: 1 }}\n      />\n      <CardContent sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n        {itemsByPriority.map((item) => {\n          return (\n            <DetailCard\n              key={item.id}\n              id={item.id}\n              name={item.name}\n              timer={item.timer}\n              assignees={item.assignees}\n              priority={item.priority as Priority}\n              status={item.status as TaskStatus}\n              onDragStart={onStartDrag}\n              onDragEnd={onEndDrag}\n              onTaskEdit={onTaskEdit}\n            ></DetailCard>\n          );\n        })}\n      </CardContent>\n      <CardActions sx={{ marginTop: 'auto' }}>\n        <Button\n          sx={{\n            fontSize: 11,\n            color: theme.colors.alpha.black[70],\n            marginLeft: 'auto',\n            marginRight: 'auto'\n          }}\n          onClick={() =>\n            openPopup('createTask', { isStatusDisabled: true, status }, addTask)\n          }\n        >\n          +Add new task\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default StatusCardContainer;\n","import React, { useCallback, useContext, useState } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  darken,\n  Divider,\n  Grid,\n  useTheme\n} from '@mui/material';\nimport StatusCardContainer from './components/StatusCardContainer';\nimport { Task, TaskStatus } from 'src/models/task';\nimport data from '../../../data/tasks.json';\nimport { PopupContext } from 'src/contexts/PopupContext';\n\nconst Tasks = () => {\n  const theme = useTheme();\n  const [isDragging, setIsDragging] = useState<boolean>(false);\n  const { openPopup } = useContext(PopupContext);\n  const [tasks, setTasks] = useState<Task[]>(data as Task[]);\n\n  const addNewTask = useCallback((data: Task) => {\n    setTasks((cur) => [\n      ...cur,\n      {\n        id: Math.random().toString(),\n        name: data.name,\n        status: data.status,\n        priority: data.priority,\n        assignees: data.assignees,\n        timer: 0\n      }\n    ]);\n  }, []);\n\n  const updateTaskStatus = useCallback((id: string, status: TaskStatus) => {\n    setTasks((cur) => {\n      const taskIndex = cur.findIndex((task) => task.id === id);\n      const result = [...cur];\n      result[taskIndex] = { ...result[taskIndex], status };\n      return result;\n    });\n  }, []);\n\n  const updateTask = useCallback((data: Task) => {\n    console.warn(data);\n    setTasks((cur) => {\n      const taskIndex = cur.findIndex((task) => task.id === data.id);\n      const result = [...cur];\n      result[taskIndex] = { ...result[taskIndex], ...data };\n      return result;\n    });\n  }, []);\n\n  return (\n    <Card>\n      <CardHeader\n        title={\n          <Box>\n            Tasks{' '}\n            <Box component={'span'}>\n              <Button\n                variant=\"outlined\"\n                sx={{\n                  fontWeight: 'bold',\n                  color: darken(theme.colors.primary.main, 0.15),\n                  border: `2px solid ${theme.colors.primary.main}`,\n                  marginLeft: 5\n                }}\n                onClick={() => openPopup('createTask', {}, addNewTask)}\n              >\n                Add New Task\n              </Button>\n            </Box>\n          </Box>\n        }\n      />\n      <Divider sx={{ height: 2 }} />\n      <CardContent sx={{ padding: 1, paddingBottom: '9px !important' }}>\n        <Grid container columns={12} spacing={1}>\n          {Object.keys(TaskStatus).map((status) => {\n            return (\n              <Grid\n                item\n                xl={3}\n                lg={3}\n                md={4}\n                sm={6}\n                xs={12}\n                key={TaskStatus[status]}\n              >\n                <StatusCardContainer\n                  items={\n                    tasks.filter(\n                      (item) => item.status === TaskStatus[status]\n                    ) as Task[]\n                  }\n                  status={TaskStatus[status]}\n                  addTask={addNewTask}\n                  updateTaskStatus={updateTaskStatus}\n                  onTaskEdit={updateTask}\n                  isDragging={isDragging}\n                  onDragStart={() => setIsDragging(true)}\n                  onDragEnd={() => setIsDragging(false)}\n                />\n              </Grid>\n            );\n          })}\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Tasks;\n","import React from 'react';\nimport { Box } from '@mui/material';\nimport { Helmet } from 'react-helmet-async';\nimport HighLight from './HighLight';\nimport Tasks from './Tasks';\n\nconst ProjectTracking = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Design System</title>\n      </Helmet>\n      <Box display={'flex'} gap={2} fontSize={11}>\n        <Box color={'#3f8f73'} fontWeight={'bold'}>\n          Active Project\n        </Box>\n        <Box>4 assignees</Box>\n        <Box>\n          Budget:{' '}\n          <Box component={'span'} fontWeight={'bold'}>\n            32 hours\n          </Box>\n        </Box>\n      </Box>\n      <HighLight />\n      <Tasks />\n    </>\n  );\n};\n\nexport default ProjectTracking;\n"],"names":["title","info","titleIcon","titleColor","theme","useTheme","Card","CardHeader","action","Box","component","fontWeight","color","colors","alpha","black","fontSize","sx","paddingBottom","paddingTop","CardContent","Grid","my","columns","container","spacing","item","xl","lg","md","sm","xs","IconButton","WorkOutline","LocalAtm","AccountBalanceWallet","Timeline","ArrowDropUp","transform","twoDigitString","num","id","name","assignees","timer","priority","status","onDragStart","onDragEnd","onTaskEdit","openPopup","useContext","PopupContext","timeObject","useMemo","h","Math","floor","m","s","onStartDrag","useCallback","e","dataTransfer","setData","colorArr","useRef","random","length","onEndDrag","openEditPopup","cursor","height","width","draggable","onDoubleClick","MoreVert","whiteSpace","textOverflow","display","overflow","CardActions","slice","map","assignee","index","Avatar","alt","variant","backgroundColor","current","charAt","marginLeft","Priority","success","lighter","warning","error","KeyboardArrowUp","KeyboardDoubleArrowUp","PriorityOrder","items","isDragging","addTask","updateTaskStatus","cardRef","statusMap","TaskStatus","itemsByPriority","sort","a","b","indexOf","onDragOver","preventDefault","Array","from","children","forEach","elm","style","pointerEvents","currentTarget","onDragLeave","unblockElm","onDrop","data","getData","useEffect","ref","border","flexDirection","gap","marginTop","Button","marginRight","onClick","isStatusDisabled","useState","setIsDragging","tasks","setTasks","addNewTask","cur","toString","taskIndex","findIndex","task","result","updateTask","console","warn","darken","primary","main","Divider","padding","Object","keys","filter"],"sourceRoot":""}